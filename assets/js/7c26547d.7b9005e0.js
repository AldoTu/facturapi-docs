"use strict";(self.webpackChunkfacturapi_docs=self.webpackChunkfacturapi_docs||[]).push([[7920],{3905:function(e,n,a){a.d(n,{Zo:function(){return u},kt:function(){return m}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function c(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),s=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},u=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(a),m=r,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return a?t.createElement(f,i(i({ref:n},u),{},{components:a})):t.createElement(f,i({ref:n},u))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=a[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:function(e,n,a){a.d(n,{Z:function(){return i}});var t=a(7294),r=a(4334),o="tabItem_Ymn6";function i(e){var n=e.children,a=e.hidden,i=e.className;return t.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:a},n)}},5488:function(e,n,a){a.d(n,{Z:function(){return m}});var t=a(3117),r=a(7294),o=a(4334),i=a(2389),c=a(7392),l=a(7094),s=a(2466),u="tabList__CuJ",p="tabItem_LNqP";function d(e){var n,a,i=e.lazy,d=e.block,m=e.defaultValue,f=e.values,g=e.groupId,v=e.className,b=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=f?f:b.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),k=(0,c.l)(y,(function(e,n){return e.value===n.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var _=null===m?m:null!=(n=null!=m?m:null==(a=b.find((function(e){return e.props.default})))?void 0:a.props.value)?n:b[0].props.value;if(null!==_&&!y.some((function(e){return e.value===_})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+_+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=(0,l.U)(),x=h.tabGroupChoices,w=h.setTabGroupChoices,P=(0,r.useState)(_),T=P[0],j=P[1],D=[],I=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var A=x[g];null!=A&&A!==T&&y.some((function(e){return e.value===A}))&&j(A)}var C=function(e){var n=e.currentTarget,a=D.indexOf(n),t=y[a].value;t!==T&&(I(n),j(t),null!=g&&w(g,String(t)))},E=function(e){var n,a=null;switch(e.key){case"Enter":C(e);break;case"ArrowRight":var t,r=D.indexOf(e.currentTarget)+1;a=null!=(t=D[r])?t:D[0];break;case"ArrowLeft":var o,i=D.indexOf(e.currentTarget)-1;a=null!=(o=D[i])?o:D[D.length-1]}null==(n=a)||n.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},v)},y.map((function(e){var n=e.value,a=e.label,i=e.attributes;return r.createElement("li",(0,t.Z)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:function(e){return D.push(e)},onKeyDown:E,onClick:C},i,{className:(0,o.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":T===n})}),null!=a?a:n)}))),i?(0,r.cloneElement)(b.filter((function(e){return e.props.value===T}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==T})}))))}function m(e){var n=(0,i.Z)();return r.createElement(d,(0,t.Z)({key:String(n)},e))}},8958:function(e,n,a){a.r(n),a.d(n,{assets:function(){return d},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var t=a(3117),r=a(102),o=(a(7294),a(3905)),i=a(5488),c=a(5162),l=["components"],s={sidebar_position:1,title:"Ingreso"},u="Comprobante de Ingreso",p={unversionedId:"guides/invoices/ingreso",id:"guides/invoices/ingreso",title:"Ingreso",description:"El Comprobante de Ingreso, tambi\xe9n conocido simplemente como factura, se utiliza para",source:"@site/docs/guides/invoices/ingreso.mdx",sourceDirName:"guides/invoices",slug:"/guides/invoices/ingreso",permalink:"/docs/guides/invoices/ingreso",draft:!1,editUrl:"https://github.com/facturapi/facturapi-docs/edit/main/website/docs/guides/invoices/ingreso.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Ingreso"},sidebar:"tutorialSidebar",previous:{title:"CFDI",permalink:"/docs/guides/invoices/"},next:{title:"Pago",permalink:"/docs/guides/invoices/pago"}},d={},m=[{value:"Ejemplos",id:"ejemplos",level:2},{value:"Factura con pago de contado (default)",id:"factura-con-pago-de-contado-default",level:3},{value:"Factura con pago a cr\xe9dito",id:"factura-con-pago-a-cr\xe9dito",level:3}],f={toc:m};function g(e){var n=e.components,a=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,t.Z)({},f,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"comprobante-de-ingreso"},"Comprobante de Ingreso"),(0,o.kt)("p",null,"El ",(0,o.kt)("strong",{parentName:"p"},"Comprobante de Ingreso"),", tambi\xe9n conocido simplemente como ",(0,o.kt)("em",{parentName:"p"},"factura"),", se utiliza para\ndar constancia fiscal de que la empresa o la persona ha entregado una mercanc\xeda o un servicio,\nas\xed como las condiciones del intercambio como la forma de pago y si se recibe en ese momento el\npago o se acuerda para cobrarse despu\xe9s."),(0,o.kt)("p",null,"El caso m\xe1s com\xfan es emitir una factura por motivo de una venta, y enviarla por correo electr\xf3nico a\ntu cliente, o ponerla disponible para su descarga."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"mdxAdmonitionTitle"},"\xbfQu\xe9 hacer si no conozco los datos fiscales del cliente?")),(0,o.kt)("p",{parentName:"admonition"},"Si al momento de recibir un pago tu cliente no te pide una factura, puedes crear un ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/receipts"},"Recibo Digital"),"\nque podr\xe1s enviar al cliente para que complete sus datos y autofacturarse, o de no hacerlo podr\xe1s generar una\nfactura global al final del mes con todos tus recibos no facturados.")),(0,o.kt)("h2",{id:"ejemplos"},"Ejemplos"),(0,o.kt)("p",null,"A continuaci\xf3n se enlistan algunos casos de uso comunes."),(0,o.kt)("p",null,"Para conocer a fondo todas las opciones disponibles al crear una factura, descripciiones\ndetalladas de cada campo y los cat\xe1logos m\xe1s utilizados consulta la\n",(0,o.kt)("a",{parentName:"p",href:"/api/#operation/createInvoice"},"referencia del m\xe9todo Crear Factura"),"."),(0,o.kt)("h3",{id:"factura-con-pago-de-contado-default"},"Factura con pago de contado (default)"),(0,o.kt)("p",null,"En este ejemplo, el pago se recibe al mismo tiempo que se entrega la mercanc\xeda o servicio."),(0,o.kt)(i.Z,{groupId:"codeExamples",mdxType:"Tabs"},(0,o.kt)(c.Z,{value:"js",label:"Node.js",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const Facturapi = require('facturapi');\nconst facturapi = new Facturapi('sk_test_API_KEY');\n\nconst invoice = await facturapi.invoices.create({\n  customer: {\n    legal_name: 'Dunder Mifflin',\n    email: 'email@example.com',\n    tax_id: 'ABC101010111',\n    tax_system: '601',\n    address: {\n      zip: '85900'\n    }\n  },\n  items: [{\n    quantity: 2,\n    product: {\n      description: 'Ukelele',\n      product_key: '60131324', // ClaveProdServ del SAT\n      price: 345.60,\n      taxes: [\n        {\n          type: 'IVA',\n          rate: 0.16\n        }\n      ]\n    }\n  }],\n  use: 'G01',\n  payment_form: \"28\" // \"Tarjeta de d\xe9bito\"\n});\n"))),(0,o.kt)(c.Z,{value:"cs",label:"C#",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'var facturapi = new FacturapiClient("sk_test_API_KEY");\n\nvar invoice = await facturapi.Invoice.CreateAsync(new Dictionary<string, object>\n{\n  ["customer"] = new Dictionary<string, object>\n  {\n    ["legal_name"] = "Dunder Mifflin",\n    ["email"] = "email@example.com",\n    ["tax_id"] = "ABC101010111",\n    ["tax_system"] = "601",\n    ["address"] = new Dictionary<string, object>\n    {\n      ["zip"] = "85900"\n    }\n  },\n  ["items"] = new Dictionary<string, object>[]\n  {\n    new Dictionary<string, object>\n    {\n      ["quantity"] = 2,\n      ["product"] = new Dictionary<string, object>\n      {\n        ["description"] = "Ukelele",\n        ["product_key"] = "60131324", // ClaveProdServ del SAT\n        ["price"] = 345.60,\n        ["taxes"] = new Dictionary<string, object>[]\n        {\n          new Dictionary<string, object>\n          {\n            ["type"] = "IVA",\n            ["rate"] = 0.16\n          }\n        }\n      }\n      ["product"] = new Dictionary<string, object>\n      {\n        ["description"] = "Ukelele",\n        ["product_key"] = "60131324", // ClaveProdServ del SAT\n        ["price"] = 345.60,\n        ["taxes"] = new Dictionary<string, object>[]\n        {\n          new Dictionary<string, object>\n          {\n            ["type"] = "IVA",\n            ["rate"] = 0.16\n          }\n        }\n      }\n    }\n  },\n  ["use"] = "G01",\n  ["payment_form"] = "28" // "Tarjeta de d\xe9bito"\n});\n'))),(0,o.kt)(c.Z,{value:"php",label:"PHP",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},'$facturapi = new Facturapi( "sk_test_API_KEY" );\n\n$invoice = $facturapi->Invoices->create([\n  "customer" => [\n    "legal_name" => "Dunder Mifflin",\n    "email" => "email@example.com",\n    "tax_id" => "ABC101010111",\n    "tax_system" => "601",\n    "address" => [\n      "zip" => "85900"\n    ]\n  ],\n  "items" => [\n    [\n      "quantity" => 2,\n      "product" => [\n        "description" => "Ukelele",\n        "product_key" => "60131324", // ClaveProdServ del SAT\n        "price" => 345.60,\n        "taxes" => [\n          [\n            "type" => "IVA",\n            "rate" => 0.16,\n          ]\n        ]\n      ]\n    ],\n  ],\n  "payment_form" => "28" // "Tarjeta de d\xe9bito"\n]);\n'))),(0,o.kt)(c.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://www.facturapi.io/v2/invoices \\\n  -H "Authorization: Bearer sk_test_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "customer": {\n      "legal_name": "Dunder Mifflin",\n      "email": "email@example.com",\n      "tax_id": "ABC101010111",\n      "tax_system": "601",\n      "address": {\n        "zip": "85900"\n      }\n    },\n    "items": [{\n      "quantity": 2,\n      "product": {\n        "description": "Ukelele",\n        "product_key": "60131324", // ClaveProdServ del SAT\n        "price": 345.60,\n        "taxes": [\n          {\n            "type": "IVA",\n            "rate": 0.16\n          }\n        ]\n      }\n    }],\n    "use": "G01",\n    "payment_form": "28" // "Tarjeta de d\xe9bito"\n  }\'\n')))),(0,o.kt)("h3",{id:"factura-con-pago-a-cr\xe9dito"},"Factura con pago a cr\xe9dito"),(0,o.kt)("p",null,"En este ejemplo, la mercanc\xeda o servicio se entrega, pero no se recibe el pago todav\xeda."),(0,o.kt)("p",null,"Posteriormente, cuando recibas un pago, ya sea por el total de la cuenta o una parcialidad, deber\xe1s emitir\nun ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/invoices/pago"},"Comprobante de Pago"),"."),(0,o.kt)(i.Z,{groupId:"codeExamples",mdxType:"Tabs"},(0,o.kt)(c.Z,{value:"js",label:"Node.js",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const Facturapi = require('facturapi');\nconst facturapi = new Facturapi('sk_test_API_KEY');\n\nconst invoice = await facturapi.invoices.create({\n  customer: {\n    legal_name: 'Dunder Mifflin',\n    email: 'email@example.com',\n    tax_id: 'ABC101010111',\n    tax_system: '601',\n    address: {\n      zip: '85900'\n    }\n  },\n  items: [{\n    quantity: 2,\n    product: {\n      description: 'Ukelele',\n      product_key: '60131324', // ClaveProdServ del SAT\n      price: 345.60,\n      taxes: [\n        {\n          type: 'IVA',\n          rate: 0.16\n        }\n      ]\n    }\n  }],\n  use: 'G01',\n  payment_form: \"99\", // \"Por definir\"\n  payment_method: 'PPD', // \"Pago en Parcialidades o Diferido\"\n  conditions: 'Fecha l\xedmite de pago: 2022-01-01' // Texto libre definiendo las condiciones del pago (opcional)\n});\n"))),(0,o.kt)(c.Z,{value:"cs",label:"C#",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'var facturapi = new FacturapiClient("sk_test_API_KEY");\n\nvar invoice = await facturapi.Invoice.CreateAsync(new Dictionary<string, object>\n{\n  ["customer"] = new Dictionary<string, object>\n  {\n    ["legal_name"] = "Dunder Mifflin",\n    ["email"] = "email@example.com",\n    ["tax_id"] = "ABC101010111",\n    ["tax_system"] = "601",\n    ["address"] = new Dictionary<string, object>\n    {\n      ["zip"] = "85900"\n    }\n  },\n  ["items"] = new Dictionary<string, object>[]\n  {\n    new Dictionary<string, object>\n    {\n      ["quantity"] = 2,\n      ["product"] = new Dictionary<string, object>\n      {\n        ["description"] = "Ukelele",\n        ["product_key"] = "60131324", // ClaveProdServ del SAT\n        ["price"] = 345.60,\n        ["taxes"] = new Dictionary<string, object>[]\n        {\n          new Dictionary<string, object>\n          {\n            ["type"] = "IVA",\n            ["rate"] = 0.16\n          }\n        }\n      }\n    }\n  },\n  ["use"] = "G01",\n  ["payment_form"] = "99", // "Por definir"\n  ["payment_method"] = "PPD", // "Pago en Parcialidades o Diferido"\n  ["conditions"] = "Fecha l\xedmite de pago: 2022-01-01" // Texto libre definiendo las condiciones del pago (opcional)\n});\n'))),(0,o.kt)(c.Z,{value:"php",label:"PHP",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},'$facturapi = new Facturapi( "sk_test_API_KEY" );\n\n$invoice = $facturapi->Invoices->create([\n  "customer" => [\n    "legal_name" => "Dunder Mifflin",\n    "email" => "email@example.com",\n    "tax_id" => "ABC101010111",\n    "tax_system" => "601",\n    "address" => [\n      "zip" => "85900"\n    ]\n  ],\n  "items" => [\n    [\n      "quantity" => 2,\n      "product" => [\n        "description" => "Ukelele",\n        "product_key" => "60131324",\n        "price" => 345.60,\n        "taxes" => [\n          [\n            "type" => "IVA",\n            "rate" => 0.16,\n          ]\n        ]\n      ]\n    ],\n  ],\n  "payment_form" => "99", // "Por definir"\n  "payment_method" => "PPD", // "Pago en Parcialidades o Diferido"\n  "conditions" => "Fecha l\xedmite de pago: 2022-01-01" // Texto libre definiendo las condiciones del pago (opcional)\n]);\n'))),(0,o.kt)(c.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://www.facturapi.io/v2/invoices \\\n  -H "Authorization: Bearer sk_test_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "customer": {\n      "legal_name": "Dunder Mifflin",\n      "email": "email@example.com",\n      "tax_id": "ABC101010111",\n      "tax_system": "601",\n      "address": {\n        "zip": "85900"\n      }\n    },\n    "items": [{\n      "quantity": 2,\n      "product": {\n        "description": "Ukelele",\n        "product_key": "60131324",\n        "price": 345.60,\n        "taxes": [\n          {\n            "type": "IVA",\n            "rate": 0.16\n          }\n        ]\n      }\n    }],\n    "use": "G01",\n    "payment_form": "99", // "Por definir"\n    "payment_method": "PPD", // "Pago en Parcialidades o Diferido"\n    "conditions": "Fecha l\xedmite de pago: 2022-01-01" // Texto libre definiendo las condiciones del pago (opcional)\n  }\'\n')))))}g.isMDXComponent=!0}}]);