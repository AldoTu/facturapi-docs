"use strict";(self.webpackChunkfacturapi_docs=self.webpackChunkfacturapi_docs||[]).push([[4929],{3905:function(e,n,a){a.d(n,{Zo:function(){return u},kt:function(){return m}});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=t.createContext({}),s=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},u=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(a),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return a?t.createElement(f,o(o({ref:n},u),{},{components:a})):t.createElement(f,o({ref:n},u))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},85162:function(e,n,a){a.d(n,{Z:function(){return o}});var t=a(67294),r=a(34334),i="tabItem_Ymn6";function o(e){var n=e.children,a=e.hidden,o=e.className;return t.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:a},n)}},65488:function(e,n,a){a.d(n,{Z:function(){return m}});var t=a(83117),r=a(67294),i=a(34334),o=a(72389),l=a(67392),c=a(7094),s=a(12466),u="tabList__CuJ",p="tabItem_LNqP";function d(e){var n,a,o=e.lazy,d=e.block,m=e.defaultValue,f=e.values,b=e.groupId,g=e.className,y=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=f?f:y.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),_=(0,l.l)(v,(function(e,n){return e.value===n.value}));if(_.length>0)throw new Error('Docusaurus error: Duplicate values "'+_.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===m?m:null!=(n=null!=m?m:null==(a=y.find((function(e){return e.props.default})))?void 0:a.props.value)?n:y[0].props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=(0,c.U)(),w=h.tabGroupChoices,x=h.setTabGroupChoices,j=(0,r.useState)(k),P=j[0],T=j[1],E=[],I=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var C=w[b];null!=C&&C!==P&&v.some((function(e){return e.value===C}))&&T(C)}var N=function(e){var n=e.currentTarget,a=E.indexOf(n),t=v[a].value;t!==P&&(I(n),T(t),null!=b&&x(b,String(t)))},D=function(e){var n,a=null;switch(e.key){case"ArrowRight":var t,r=E.indexOf(e.currentTarget)+1;a=null!=(t=E[r])?t:E[0];break;case"ArrowLeft":var i,o=E.indexOf(e.currentTarget)-1;a=null!=(i=E[o])?i:E[E.length-1]}null==(n=a)||n.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},g)},v.map((function(e){var n=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,t.Z)({role:"tab",tabIndex:P===n?0:-1,"aria-selected":P===n,key:n,ref:function(e){return E.push(e)},onKeyDown:D,onFocus:N,onClick:N},o,{className:(0,i.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":P===n})}),null!=a?a:n)}))),o?(0,r.cloneElement)(y.filter((function(e){return e.props.value===P}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==P})}))))}function m(e){var n=(0,o.Z)();return r.createElement(d,(0,t.Z)({key:String(n)},e))}},59480:function(e,n,a){a.r(n),a.d(n,{assets:function(){return d},contentTitle:function(){return u},default:function(){return b},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var t=a(83117),r=a(80102),i=(a(67294),a(3905)),o=a(65488),l=a(85162),c=["components"],s={sidebar_position:2,title:"Pago"},u="Comprobante de Pago",p={unversionedId:"guides/invoices/pago",id:"guides/invoices/pago",title:"Pago",description:"El Comprobante de Pago, tambi\xe9n llamado Recibo Electr\xf3nico de Pago (REP), _comprobante al que se le",source:"@site/docs/guides/invoices/pago.mdx",sourceDirName:"guides/invoices",slug:"/guides/invoices/pago",permalink:"/docs/guides/invoices/pago",draft:!1,editUrl:"https://github.com/facturapi/facturapi-docs/edit/main/website/docs/guides/invoices/pago.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Pago"},sidebar:"tutorialSidebar",previous:{title:"Ingreso",permalink:"/docs/guides/invoices/ingreso"},next:{title:"Egreso",permalink:"/docs/guides/invoices/egreso"}},d={},m=[{value:"Ejemplos",id:"ejemplos",level:2},{value:"Pago total de una factura pendiente",id:"pago-total-de-una-factura-pendiente",level:3},{value:"Pago en parcialidades de una factura pendiente",id:"pago-en-parcialidades-de-una-factura-pendiente",level:3}],f={toc:m};function b(e){var n=e.components,a=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,t.Z)({},f,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"comprobante-de-pago"},"Comprobante de Pago"),(0,i.kt)("p",null,"El ",(0,i.kt)("strong",{parentName:"p"},"Comprobante de Pago"),", tambi\xe9n llamado ",(0,i.kt)("em",{parentName:"p"},"Recibo Electr\xf3nico de Pago (REP)"),", ",(0,i.kt)("em",{parentName:"p"},"comprobante al que se le\nincorpora el complemento de recepci\xf3n de pagos"),", o simplemente ",(0,i.kt)("em",{parentName:"p"},"complemento de pago")," se utiliza para\ndar constancia fiscal de que la empresa o la persona recibi\xf3 un pago por una mercanc\xeda o servicio entregado\ncon anterioridad."),(0,i.kt)("p",null,"Para emitir un Comprobante de Pago, debe existir un Comprobante de Ingreso que se haya creado al momento de\nla entrega de la mercanc\xeda o servicio, y cuyo m\xe9todo de pago se haya registrado el valor ",(0,i.kt)("inlineCode",{parentName:"p"},'"PPD"'),"\n(Pago en Parcialidades o Diferido)."),(0,i.kt)("h2",{id:"ejemplos"},"Ejemplos"),(0,i.kt)("p",null,"A continuaci\xf3n se enlistan algunos casos de uso comunes."),(0,i.kt)("p",null,"Para conocer a fondo todas las opciones disponibles al crear un Comprobante de Pago, descripciiones\ndetalladas de cada campo y los cat\xe1logos m\xe1s utilizados consulta la\n",(0,i.kt)("a",{parentName:"p",href:"/api/#operation/createInvoice"},"referencia del m\xe9todo Crear Factura"),", y posteriormente haz clic sobre\nel tipo de factura ",(0,i.kt)("strong",{parentName:"p"},"Pago"),"."),(0,i.kt)("h3",{id:"pago-total-de-una-factura-pendiente"},"Pago total de una factura pendiente"),(0,i.kt)("p",null,"En este ejemplo, se recibe un s\xf3lo pago para liquidar el total de una factura pendiente de pago por $345.60 MXN."),(0,i.kt)(o.Z,{groupId:"codeExamples",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"js",label:"Node.js",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const Facturapi = require('facturapi');\nconst facturapi = new Facturapi('sk_test_API_KEY');\n\nconst invoice = await facturapi.invoices.create({\n  type: 'P',\n  customer: {\n    legal_name: 'Dunder Mifflin',\n    email: 'email@example.com',\n    tax_id: 'ABC101010111',\n    tax_system: '601',\n    address: {\n      zip: '85900'\n    }\n  },\n  complements: [\n    {\n      type: 'pago',\n      data: {\n        payment_form: '28', // Tarjeta de Cr\xe9dito\n        related_documents: [\n          {\n            uuid: '39c85a3f-275b-4341-b259-e8971d9f8a94',\n            amount: 345.60,\n            installment: 1,\n            last_balance: 345.60,\n            taxes: [\n              {\n                base: 297.93,\n                type: 'IVA',\n                rate: 0.16\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n});\n"))),(0,i.kt)(l.Z,{value:"cs",label:"C#",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'var facturapi = new FacturapiClient("sk_test_API_KEY");\n\nvar invoice = await facturapi.Invoice.CreateAsync(new Dictionary<string, object>\n{\n  ["type"] = "P",\n  ["customer"] = new Dictionary<string, object>\n  {\n    ["legal_name"] = "Dunder Mifflin",\n    ["email"] = "email@example.com",\n    ["tax_id"] = "ABC101010111",\n    ["tax_system"] = "601",\n    ["address"] = new Dictionary<string, object>\n    {\n      ["zip"] = "85900"\n    }\n  },\n  ["complements"] = new Dictionary<string, object>[]\n  {\n    new Dictionary<string, object>\n    {\n      ["type"] = "pago",\n      ["data"] = new Dictionary<string, object>\n      {\n        ["payment_form"] = "28", // Tarjeta de Cr\xe9dito\n        ["related_documents"] = new Dictionary<string, object>[]\n        {\n          new Dictionary<string, object>\n          {\n            ["uuid"] = "39c85a3f-275b-4341-b259-e8971d9f8a94",\n            ["amount"] = 345.60,\n            ["installment"] = 1,\n            ["last_balance"] = 345.60,\n            ["taxes"] = new Dictionary<string, object>[]\n            {\n              new Dictionary<string, object>\n              {\n                ["base"] = 297.93,\n                ["type"] = "IVA",\n                ["rate"] = 0.16\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n});\n'))),(0,i.kt)(l.Z,{value:"php",label:"PHP",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},'$facturapi = new Facturapi( "sk_test_API_KEY" );\n\n$invoice = $facturapi->Invoices->create([\n  "type" => "P",\n  "customer" => [\n    "legal_name" => "Dunder Mifflin",\n    "email" => "email@example.com",\n    "tax_id" => "ABC101010111",\n    "tax_system" => "601",\n    "address" => [\n      "zip" => "85900"\n    ]\n  ],\n  "complements" => [\n    [\n      "type" => "pago",\n      "data" => [\n        "payment_form" => "28", // Tarjeta de Cr\xe9dito\n        "related_documents" => [\n          [\n            "uuid" => "39c85a3f-275b-4341-b259-e8971d9f8a94",\n            "amount" => 345.60,\n            "installment" => 1,\n            "last_balance" => 345.60,\n            "taxes" => [\n              [\n                "base" => 297.93,\n                "type" => "IVA",\n                "rate" => 0.16\n              ]\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n]);\n'))),(0,i.kt)(l.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://www.facturapi.io/v2/invoices \\\n  -H "Authorization: Bearer sk_test_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "type": "P",\n    "customer": {\n      "legal_name": "Dunder Mifflin",\n      "email": "email@example.com",\n      "tax_id": "ABC101010111",\n      "tax_system": "601",\n      "address": {\n        "zip": "85900"\n      }\n    },\n    "complements": [\n      {\n        "type": "pago",\n        "data": {\n          "payment_form": "28", // Tarjeta de Cr\xe9dito\n          "related_documents": [\n            {\n              "uuid": "39c85a3f-275b-4341-b259-e8971d9f8a94",\n              "amount": 345.60,\n              "installment": 1,\n              "last_balance": 345.60,\n              "taxes": [\n                {\n                  "base": 297.93,\n                  "type": "IVA",\n                  "rate": 0.16\n                }\n              ]\n            }\n          ]\n        }\n      }\n    ]\n  }\'\n')))),(0,i.kt)("h3",{id:"pago-en-parcialidades-de-una-factura-pendiente"},"Pago en parcialidades de una factura pendiente"),(0,i.kt)("p",null,"En este ejemplo, se reciben $100 MXN como pago por la segunda parcialidad de una factura pendiente de pago cuyo\ntotal era de $345.60 MXN. Se considera que en la primera parcialidad tambi\xe9n se pagaron $100 MXN."),(0,i.kt)(o.Z,{groupId:"codeExamples",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"js",label:"Node.js",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const Facturapi = require('facturapi');\nconst facturapi = new Facturapi('sk_test_API_KEY');\n\nconst invoice = await facturapi.invoices.create({\n  type: 'P',\n  customer: {\n    legal_name: 'Dunder Mifflin',\n    email: 'email@example.com',\n    tax_id: 'ABC101010111',\n    tax_system: '601',\n    address: {\n      zip: '85900'\n    }\n  },\n  complements: [\n    {\n      type: 'pago',\n      data: {\n        payment_form: '28', // Tarjeta de Cr\xe9dito\n        related_documents: [\n          {\n            uuid: '39c85a3f-275b-4341-b259-e8971d9f8a94',\n            amount: 100, // Monto de la factura relacionada que se paga en la presente parcialidad\n            installment: 2, // Esta es la segunda parcialidad\n            last_balance: 245.60, // Saldo insoluto de la primera parcialidad\n            taxes: [\n              {\n                base: 86.21, // Base de IVA de la segunda parcialidad\n                type: 'IVA',\n                rate: 0.16\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n});\n"))),(0,i.kt)(l.Z,{value:"cs",label:"C#",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'var facturapi = new FacturapiClient("sk_test_API_KEY");\n\nvar invoice = await facturapi.Invoice.CreateAsync(new Dictionary<string, object>\n{\n  ["type"] = "P",\n  ["customer"] = new Dictionary<string, object>\n  {\n    ["legal_name"] = "Dunder Mifflin",\n    ["email"] = "email@example.com",\n    ["tax_id"] = "ABC101010111",\n    ["tax_system"] = "601",\n    ["address"] = new Dictionary<string, object>\n    {\n      ["zip"] = "85900"\n    }\n  },\n  ["complements"] = new Dictionary<string, object>[]\n  {\n    new Dictionary<string, object>\n    {\n      ["type"] = "pago",\n      ["data"] = new Dictionary<string, object>\n      {\n        ["payment_form"] = "28", // Tarjeta de Cr\xe9dito\n        ["related_documents"] = new Dictionary<string, object>[]\n        {\n          new Dictionary<string, object>\n          {\n            ["uuid"] = "39c85a3f-275b-4341-b259-e8971d9f8a94",\n            ["amount"] = 100, // Monto de la factura relacionada que se paga en la presente parcialidad\n            ["installment"] = 2, // Esta es la segunda parcialidad\n            ["last_balance"] = 245.60, // Saldo insoluto de la primera parcialidad\n            ["taxes"] = new Dictionary<string, object>[]\n            {\n              new Dictionary<string, object>\n              {\n                ["base"] = 86.21, // Base de IVA de la segunda parcialidad\n                ["type"] = "IVA",\n                ["rate"] = 0.16\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n});\n'))),(0,i.kt)(l.Z,{value:"php",label:"PHP",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},'$facturapi = new Facturapi( "sk_test_API_KEY" );\n\n$invoice = $facturapi->Invoices->create([\n  "type" => "P",\n  "customer" => [\n    "legal_name" => "Dunder Mifflin",\n    "email" => "email@example.com",\n    "tax_id" => "ABC101010111",\n    "tax_system" => "601",\n    "address" => [\n      "zip" => "85900"\n    ]\n  ],\n  "complements" => [\n    [\n      "type" => "pago",\n      "data" => [\n        "payment_form" => "28", // Tarjeta de Cr\xe9dito\n        "related_documents" => [\n          [\n            "uuid" => "39c85a3f-275b-4341-b259-e8971d9f8a94",\n            "amount" => 100, // Monto de la factura relacionada que se paga en la presente parcialidad\n            "installment" => 2, // Esta es la segunda parcialidad\n            "last_balance" => 245.60, // Saldo insoluto de la primera parcialidad\n            "taxes" => [\n              [\n                "base" => 86.21, // Base de IVA de la segunda parcialidad\n                "type" => "IVA",\n                "rate" => 0.16\n              ]\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n]);\n'))),(0,i.kt)(l.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://www.facturapi.io/v2/invoices \\\n  -H "Authorization: Bearer sk_test_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "type": "P",\n    "customer": {\n      "legal_name": "Dunder Mifflin",\n      "email": "email@example.com",\n      "tax_id": "ABC101010111",\n      "tax_system": "601",\n      "address": {\n        "zip": "85900"\n      }\n    },\n    "complements": [\n      {\n        "type": "pago",\n        "data": {\n          "payment_form": "28", // Tarjeta de Cr\xe9dito\n          "related_documents": [\n            {\n              "uuid": "39c85a3f-275b-4341-b259-e8971d9f8a94",\n              "amount": 100, // Monto de la factura relacionada que se paga en la presente parcialidad\n              "installment": 2, // Esta es la segunda parcialidad\n              "last_balance": 245.60, // Saldo insoluto de la primera parcialidad\n              "taxes": [\n                {\n                  "base": 86.21, // Base de IVA de la segunda parcialidad\n                  "type": "IVA",\n                  "rate": 0.16\n                }\n              ]\n            }\n          ]\n        }\n      }\n    ]\n  }\'\n')))))}b.isMDXComponent=!0}}]);