"use strict";(self.webpackChunkfacturapi_docs=self.webpackChunkfacturapi_docs||[]).push([[2182],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),m=r,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return t?a.createElement(f,i(i({ref:n},u),{},{components:t})):a.createElement(f,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7294),r=t(6010);const o="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>I});var a=t(7462),r=t(7294),o=t(6010),i=t(6775),c=t(1980),s=t(7392),l=t(12);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function d(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??u(t);return function(e){const n=(0,s.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=d(e),[i,c]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:o}))),[s,u]=m({queryString:t,groupId:a}),[f,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,l.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),g=(()=>{const e=s??f;return p({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&c(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),b(e)}),[u,b,o]),tabValues:o}}var b=t(2466),g=t(2389);const y="tabList__CuJ",v="tabItem_LNqP";function _(e){let{className:n,block:t,selectedValue:i,selectValue:c,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,b.o5)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),a=s[t].value;a!==i&&(u(n),c(a))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},s.map((e=>{let{value:n,label:t,attributes:c}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>l.push(e),onKeyDown:p,onClick:d},c,{className:(0,o.Z)("tabs__item",v,c?.className,{"tabs__item--active":i===n})}),t??n)})))}function D(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function k(e){const n=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",y)},r.createElement(_,(0,a.Z)({},e,n)),r.createElement(D,(0,a.Z)({},e,n)))}function I(e){const n=(0,g.Z)();return r.createElement(k,(0,a.Z)({key:String(n)},e))}},8328:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>c,metadata:()=>l,toc:()=>d});var a=t(7462),r=(t(7294),t(3905)),o=t(4866),i=t(5162);const c={sidebar_position:3,title:"Egreso"},s="Nota de cr\xe9dito",l={unversionedId:"guides/invoices/egreso",id:"guides/invoices/egreso",title:"Egreso",description:"El comprobante fiscal de tipo Egreso, o Nota de cr\xe9dito, se utiliza para",source:"@site/docs/guides/invoices/egreso.mdx",sourceDirName:"guides/invoices",slug:"/guides/invoices/egreso",permalink:"/docs/guides/invoices/egreso",draft:!1,editUrl:"https://github.com/facturapi/facturapi-docs/edit/main/website/docs/guides/invoices/egreso.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Egreso"},sidebar:"tutorialSidebar",previous:{title:"Pago",permalink:"/docs/guides/invoices/pago"},next:{title:"N\xf3mina",permalink:"/docs/guides/invoices/nomina"}},u={},d=[{value:"Ejemplos",id:"ejemplos",level:2},{value:"Descuento por una venta ya facturada",id:"descuento-por-una-venta-ya-facturada",level:3},{value:"Anulaci\xf3n de un CFDI de ingreso",id:"anulaci\xf3n-de-un-cfdi-de-ingreso",level:3},{value:"Bonificaci\xf3n a una venta futura",id:"bonificaci\xf3n-a-una-venta-futura",level:3}],p={toc:d};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nota-de-cr\xe9dito"},"Nota de cr\xe9dito"),(0,r.kt)("p",null,"El comprobante fiscal de tipo ",(0,r.kt)("strong",{parentName:"p"},"Egreso"),", o ",(0,r.kt)("strong",{parentName:"p"},"Nota de cr\xe9dito"),", se utiliza para\nregistrar fiscalmente salidas de dinero como devoluciones, descuentos y bonificaciones.\nLa funci\xf3n principal de este tipo de comprobantes es la deductibilidad ya que se utilizan para corregir o restar montos de comprobantes de ingresos emitidos con anterioridad."),(0,r.kt)("p",null,'La clave de este tipo de CFDI es comprobante tipo "E".'),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"mdxAdmonitionTitle"},"\xbfUn comprobante de Egreso debe relacionarse?")),(0,r.kt)("p",{parentName:"admonition"},"Cuando el descuento aplicado se hace sobre una venta que ya fue facturada, el comprobante debe relacionarse\ncon uno o varios comprobantes de Ingreso utilizando la clave de relaci\xf3n correspondiente y el UUID de la factura\nde Ingreso."),(0,r.kt)("p",{parentName:"admonition"},"Es importante mencionar que un comprobante de Egreso no sirve para cancelar un comprobante de Ingreso.")),(0,r.kt)("h2",{id:"ejemplos"},"Ejemplos"),(0,r.kt)("p",null,"A continuaci\xf3n se listan algunos casos de uso comunes."),(0,r.kt)("p",null,"Para conocer a fondo todas las opciones disponibles al crear una factura, descripciiones\ndetalladas de cada campo y los cat\xe1logos m\xe1s utilizados consulta la\n",(0,r.kt)("a",{parentName:"p",href:"/api/#operation/createInvoice"},"referencia del m\xe9todo Crear Factura"),"."),(0,r.kt)("h3",{id:"descuento-por-una-venta-ya-facturada"},"Descuento por una venta ya facturada"),(0,r.kt)("p",null,"En este ejemplo, se recibi\xf3 un pago de $3,600.00 pesos por un producto con el 10% descuento que tiene un valor de 4,000 pesos, los $400.00 pesos descontados se amparan emitiendo un CFDI de egreso."),(0,r.kt)(o.Z,{groupId:"codeExamples",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"js",label:"Node.js",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const Facturapi = require('facturapi');\nconst facturapi = new Facturapi('sk_test_API_KEY');\n\nconst invoice = await facturapi.invoices.create({\n  customer: {\n    legal_name: 'Dunder Mifflin',\n    email: 'email@example.com',\n    tax_id: 'ABC101010111',\n    tax_system: '601',\n    address: {\n      zip: '85900'\n    }\n  },\n  items: [{\n    product: {\n      description: 'Descuento',\n      price: 400,\n      taxes: [\n        {\n          type: 'IVA',\n          rate: 0.16\n        }\n      ]\n    }\n  }],\n  payment_form: \"28\", // \"Tarjeta de d\xe9bito\"\n  related_documents: [\n    {\n      relationship: \"01\", // \"Nota de cr\xe9dito de los documentos relacionados\"\n      uuid: \"UUID_DEL_CFDI_DE_INGRESO\"\n    }\n  ]\n});\n"))),(0,r.kt)(i.Z,{value:"cs",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var facturapi = new FacturapiClient("sk_test_API_KEY");\n\nvar invoice = await facturapi.Invoice.CreateAsync(new Dictionary<string, object>\n{\n  ["customer"] = new Dictionary<string, object>\n  {\n    ["legal_name"] = "Dunder Mifflin",\n    ["email"] = "email@example.com",\n    ["tax_id"] = "ABC101010111",\n    ["tax_system"] = "601",\n    ["address"] = new Dictionary<string, object>\n    {\n      ["zip"] = "85900"\n    }\n  },\n  ["items"] = new Dictionary<string, object>[]\n  {\n    new Dictionary<string, object>\n    {\n      ["product"] = new Dictionary<string, object>\n      {\n        ["description"] = "Descuento",\n        ["price"] = 400,\n        ["taxes"] = new Dictionary<string, object>[]\n        {\n          new Dictionary<string, object>\n          {\n            ["type"] = "IVA",\n            ["rate"] = 0.16\n          }\n        }\n      }\n    }\n  },\n  ["payment_form"] = "28", // "Tarjeta de d\xe9bito",\n  ["related_documents"] = new Dictionary<string, object>[]\n  {\n    new Dictionary<string, object>\n    {\n      ["relationship"] = "01", // "Nota de cr\xe9dito de los documentos relacionados"\n      ["uuid"] = "UUID_DEL_CFDI_DE_INGRESO"\n    }\n  }\n\n});\n'))),(0,r.kt)(i.Z,{value:"php",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$facturapi = new Facturapi( "sk_test_API_KEY" );\n\n$invoice = $facturapi->Invoices->create([\n  "customer" => [\n    "legal_name" => "Dunder Mifflin",\n    "email" => "email@example.com",\n    "tax_id" => "ABC101010111",\n    "tax_system" => "601",\n    "address" => [\n      "zip" => "85900"\n    ]\n  ],\n  "items" => [\n    [\n      "product" => [\n        "description" => "Descuento",\n        "price" => 400,\n        "taxes" => [\n          [\n            "type" => "IVA",\n            "rate" => 0.16\n          ]\n        ]\n      ]\n    ]\n  ],\n  "payment_form" => "28", // "Tarjeta de d\xe9bito",\n  "related_documents" => [\n    [\n      "relationship" => "01", // "Nota de cr\xe9dito de los documentos relacionados"\n      "uuid" => "UUID_DEL_CFDI_DE_INGRESO"\n    ]\n  ]\n]);\n'))),(0,r.kt)(i.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://www.facturapi.io/v2/invoices \\\n  -H "Authorization: Bearer sk_test_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "customer": {\n      "legal_name": "Dunder Mifflin",\n      "email": "email@example.com",\n      "tax_id": "ABC101010111",\n      "tax_system": "601",\n      "address": {\n        "zip": "85900"\n      }\n    },\n    "items": [\n      {\n        "product": {\n          "description": "Descuento",\n          "price": 400,\n          "taxes": [\n            {\n              "type": "IVA",\n              "rate": 0.16\n            }\n          ]\n        }\n      }\n    ],\n    "payment_form": "28", // "Tarjeta de d\xe9bito"\n    "related_documents": [\n      {\n        "relationship": "01", // "Nota de cr\xe9dito de los documentos relacionados"\n        "uuid": "UUID_DEL_CFDI_DE_INGRESO"\n      }\n    ]\n  }\'\n')))),(0,r.kt)("h3",{id:"anulaci\xf3n-de-un-cfdi-de-ingreso"},"Anulaci\xf3n de un CFDI de ingreso"),(0,r.kt)("p",null,"Para este escenario, se emite un comprobante de egreso por $5000.00 pesos para anular el monto total de un CFDI de ingreso previo con el mismo monto."),(0,r.kt)(o.Z,{groupId:"codeExamples",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"js",label:"Node.js",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const Facturapi = require('facturapi');\nconst facturapi = new Facturapi('sk_test_API_KEY');\n\nconst invoice = await facturapi.invoices.create({\n  customer: {\n    legal_name: 'Dunder Mifflin',\n    email: 'email@example.com',\n    tax_id: 'ABC101010111',\n    tax_system: '601',\n    address: {\n      zip: '85900'\n    }\n  },\n  items: [{\n    product: {\n      description: 'Devoluci\xf3n total de mercanc\xeda',\n      price: 5000,\n      taxes: [\n        {\n          type: 'IVA',\n          rate: 0.16\n        }\n      ]\n    }\n  }],\n  payment_form: \"28\", // \"Tarjeta de d\xe9bito\"\n  related_documents: [\n    {\n      relationship: \"01\", // \"Nota de cr\xe9dito de los documentos relacionados\"\n      uuid: \"UUID_DEL_CFDI_DE_INGRESO\"\n    }\n  ]\n});\n"))),(0,r.kt)(i.Z,{value:"cs",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var facturapi = new FacturapiClient("sk_test_API_KEY");\n\nvar invoice = await facturapi.Invoice.CreateAsync(new Dictionary<string, object>\n{\n  ["customer"] = new Dictionary<string, object>\n  {\n    ["legal_name"] = "Dunder Mifflin",\n    ["email"] = "email@example.com",\n    ["tax_id"] = "ABC101010111",\n    ["tax_system"] = "601",\n    ["address"] = new Dictionary<string, object>\n    {\n      ["zip"] = "85900"\n    }\n  },\n  ["items"] = new Dictionary<string, object>[]\n  {\n    new Dictionary<string, object>\n    {\n      ["product"] = new Dictionary<string, object>\n      {\n        ["description"] = "Devoluci\xf3n total de mercanc\xeda",\n        ["price"] = 5000,\n        ["taxes"] = new Dictionary<string, object>[]\n        {\n          new Dictionary<string, object>\n          {\n            ["type"] = "IVA",\n            ["rate"] = 0.16\n          }\n        }\n      }\n    }\n  },\n  ["payment_form"] = "28", // "Tarjeta de d\xe9bito",\n  ["related_documents"] = new Dictionary<string, object>[]\n  {\n    new Dictionary<string, object>\n    {\n      ["relationship"] = "01", // "Nota de cr\xe9dito de los documentos relacionados"\n      ["uuid"] = "UUID_DEL_CFDI_DE_INGRESO"\n    }\n  }\n\n});\n'))),(0,r.kt)(i.Z,{value:"php",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$facturapi = new Facturapi( "sk_test_API_KEY" );\n\n$invoice = $facturapi->Invoices->create([\n  "customer" => [\n    "legal_name" => "Dunder Mifflin",\n    "email" => "email@example.com",\n    "tax_id" => "ABC101010111",\n    "tax_system" => "601",\n    "address" => [\n      "zip" => "85900"\n    ]\n  ],\n  "items" => [\n    [\n      "product" => [\n        "description" => "Devoluci\xf3n total de mercanc\xeda",\n        "price" => 5000,\n        "taxes" => [\n          [\n            "type" => "IVA",\n            "rate" => 0.16\n          ]\n        ]\n      ]\n    ]\n  ],\n  "payment_form" => "28", // "Tarjeta de d\xe9bito",\n  "related_documents" => [\n    [\n      "relationship" => "01", // "Nota de cr\xe9dito de los documentos relacionados"\n      "uuid" => "UUID_DEL_CFDI_DE_INGRESO"\n    ]\n  ]\n]);\n'))),(0,r.kt)(i.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://www.facturapi.io/v2/invoices \\\n  -H "Authorization: Bearer sk_test_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "customer": {\n      "legal_name": "Dunder Mifflin",\n      "email": "email@example.com",\n      "tax_id": "ABC101010111",\n      "tax_system": "601",\n      "address": {\n        "zip": "85900"\n      }\n    },\n    "items": [\n      {\n        "product": {\n          "description": "Devoluci\xf3n total de mercanc\xeda",\n          "price": 5000,\n          "taxes": [\n            {\n              "type": "IVA",\n              "rate": 0.16\n            }\n          ]\n        }\n      }\n    ],\n    "payment_form": "28", // "Tarjeta de d\xe9bito"\n    "related_documents": [\n      {\n        "relationship": "01", // "Nota de cr\xe9dito de los documentos relacionados"\n        "uuid": "UUID_DEL_CFDI_DE_INGRESO"\n      }\n    ]\n  }\'\n')))),(0,r.kt)("h3",{id:"bonificaci\xf3n-a-una-venta-futura"},"Bonificaci\xf3n a una venta futura"),(0,r.kt)("p",null,"Es posible ofrecer bonificaciones a ventas por realizarse de forma anticipada.\nEn este ejemplo se emite un CFDI de egreso por $400.00 pesos para amparar un bono\nque ser\xe1 aplicado a una venta por 2,000.00 pesos."),(0,r.kt)(o.Z,{groupId:"codeExamples",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"js",label:"Node.js",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const Facturapi = require('facturapi');\nconst facturapi = new Facturapi('sk_test_API_KEY');\n\nconst invoice = await facturapi.invoices.create({\n  customer: {\n    legal_name: 'Dunder Mifflin',\n    email: 'email@example.com',\n    tax_id: 'ABC101010111',\n    tax_system: '601',\n    address: {\n      zip: '85900'\n    }\n  },\n  items: [{\n    product: {\n      description: 'Bonificaci\xf3n a venta futura',\n      price: 400,\n      taxes: [\n        {\n          type: 'IVA',\n          rate: 0.16\n        }\n      ]\n    }\n  }],\n  payment_form: \"23\" // \"Novaci\xf3n\"\n});\n"))),(0,r.kt)(i.Z,{value:"cs",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var facturapi = new FacturapiClient("sk_test_API_KEY");\n\nvar invoice = await facturapi.Invoice.CreateAsync(new Dictionary<string, object>\n{\n  ["customer"] = new Dictionary<string, object>\n  {\n    ["legal_name"] = "Dunder Mifflin",\n    ["email"] = "email@example.com",\n    ["tax_id"] = "ABC101010111",\n    ["tax_system"] = "601",\n    ["address"] = new Dictionary<string, object>\n    {\n      ["zip"] = "85900"\n    }\n  },\n  ["items"] = new Dictionary<string, object>[]\n  {\n    new Dictionary<string, object>\n    {\n      ["product"] = new Dictionary<string, object>\n      {\n        ["description"] = "Bonificaci\xf3n a venta futura",\n        ["price"] = 400,\n        ["taxes"] = new Dictionary<string, object>[]\n        {\n          new Dictionary<string, object>\n          {\n            ["type"] = "IVA",\n            ["rate"] = 0.16\n          }\n        }\n      }\n    }\n  },\n  ["payment_form"] = "23" // "Novaci\xf3n"\n});\n'))),(0,r.kt)(i.Z,{value:"php",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$facturapi = new Facturapi( "sk_test_API_KEY" );\n\n$invoice = $facturapi->Invoices->create([\n  "customer" => [\n    "legal_name" => "Dunder Mifflin",\n    "email" => "email@example.com",\n    "tax_id" => "ABC101010111",\n    "tax_system" => "601",\n    "address" => [\n      "zip" => "85900"\n    ]\n  ],\n  "items" => [\n    [\n      "product" => [\n        "description" => "Bonificaci\xf3n a venta futura",\n        "price" => 400,\n        "taxes" => [\n          [\n            "type" => "IVA",\n            "rate" => 0.16\n          ]\n        ]\n      ]\n    ]\n  ],\n  "payment_form" => "23" // "Novaci\xf3n"\n]);\n'))),(0,r.kt)(i.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://www.facturapi.io/v2/invoices \\\n  -H "Authorization: Bearer sk_test_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "customer": {\n      "legal_name": "Dunder Mifflin",\n      "email": "email@example.com",\n      "tax_id": "ABC101010111",\n      "tax_system": "601",\n      "address": {\n        "zip": "85900"\n      }\n    },\n    "items": [\n      {\n        "product": {\n          "description": "Descuento",\n          "price": 400,\n          "taxes": [\n            {\n              "type": "IVA",\n              "rate": 0.16\n            }\n          ]\n        }\n      }\n    ],\n    "payment_form": "23" // "Novaci\xf3n"\n  }\'\n')))))}m.isMDXComponent=!0}}]);