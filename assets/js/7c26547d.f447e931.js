"use strict";(self.webpackChunkfacturapi_docs=self.webpackChunkfacturapi_docs||[]).push([[7920],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(t),m=r,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return t?a.createElement(f,i(i({ref:n},u),{},{components:t})):a.createElement(f,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7294),r=t(6010);const o="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>w});var a=t(7462),r=t(7294),o=t(6010),i=t(6775),c=t(1980),l=t(7392),s=t(12);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??u(t);return function(e){const n=(0,l.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function d(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=p(e),[i,c]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:o}))),[l,u]=m({queryString:t,groupId:a}),[f,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,s.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),b=(()=>{const e=l??f;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&c(b)}),[b]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var g=t(2466),b=t(2389);const y="tabList__CuJ",v="tabItem_LNqP";function k(e){let{className:n,block:t,selectedValue:i,selectValue:c,tabValues:l}=e;const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,g.o5)(),p=e=>{const n=e.currentTarget,t=s.indexOf(n),a=l[t].value;a!==i&&(u(n),c(a))},d=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},l.map((e=>{let{value:n,label:t,attributes:c}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>s.push(e),onKeyDown:d,onClick:p},c,{className:(0,o.Z)("tabs__item",v,c?.className,{"tabs__item--active":i===n})}),t??n)})))}function h(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function _(e){const n=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",y)},r.createElement(k,(0,a.Z)({},e,n)),r.createElement(h,(0,a.Z)({},e,n)))}function w(e){const n=(0,b.Z)();return r.createElement(_,(0,a.Z)({key:String(n)},e))}},8958:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>p});var a=t(7462),r=(t(7294),t(3905)),o=t(4866),i=t(5162);const c={sidebar_position:1,title:"Ingreso"},l="Comprobante de Ingreso",s={unversionedId:"guides/invoices/ingreso",id:"guides/invoices/ingreso",title:"Ingreso",description:"El Comprobante de Ingreso, tambi\xe9n conocido simplemente como factura, se utiliza para",source:"@site/docs/guides/invoices/ingreso.mdx",sourceDirName:"guides/invoices",slug:"/guides/invoices/ingreso",permalink:"/docs/guides/invoices/ingreso",draft:!1,editUrl:"https://github.com/facturapi/facturapi-docs/edit/main/website/docs/guides/invoices/ingreso.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Ingreso"},sidebar:"tutorialSidebar",previous:{title:"CFDI",permalink:"/docs/guides/invoices/"},next:{title:"Pago",permalink:"/docs/guides/invoices/pago"}},u={},p=[{value:"Ejemplos",id:"ejemplos",level:2},{value:"Factura con pago de contado (default)",id:"factura-con-pago-de-contado-default",level:3},{value:"Factura con pago a cr\xe9dito",id:"factura-con-pago-a-cr\xe9dito",level:3}],d={toc:p};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"comprobante-de-ingreso"},"Comprobante de Ingreso"),(0,r.kt)("p",null,"El ",(0,r.kt)("strong",{parentName:"p"},"Comprobante de Ingreso"),", tambi\xe9n conocido simplemente como ",(0,r.kt)("em",{parentName:"p"},"factura"),", se utiliza para\ndar constancia fiscal de que la empresa o la persona ha entregado una mercanc\xeda o un servicio,\nas\xed como las condiciones del intercambio como la forma de pago y si se recibe en ese momento el\npago o se acuerda para cobrarse despu\xe9s."),(0,r.kt)("p",null,"El caso m\xe1s com\xfan es emitir una factura por motivo de una venta, y enviarla por correo electr\xf3nico a\ntu cliente, o ponerla disponible para su descarga."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"mdxAdmonitionTitle"},"\xbfQu\xe9 hacer si no conozco los datos fiscales del cliente?")),(0,r.kt)("p",{parentName:"admonition"},"Si al momento de recibir un pago tu cliente no te pide una factura, puedes crear un ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/receipts"},"Recibo Digital"),"\nque podr\xe1s enviar al cliente para que complete sus datos y autofacturarse, o de no hacerlo podr\xe1s generar una\nfactura global al final del mes con todos tus recibos no facturados.")),(0,r.kt)("h2",{id:"ejemplos"},"Ejemplos"),(0,r.kt)("p",null,"A continuaci\xf3n se enlistan algunos casos de uso comunes."),(0,r.kt)("p",null,"Para conocer a fondo todas las opciones disponibles al crear una factura, descripciiones\ndetalladas de cada campo y los cat\xe1logos m\xe1s utilizados consulta la\n",(0,r.kt)("a",{parentName:"p",href:"/api/#operation/createInvoice"},"referencia del m\xe9todo Crear Factura"),"."),(0,r.kt)("h3",{id:"factura-con-pago-de-contado-default"},"Factura con pago de contado (default)"),(0,r.kt)("p",null,"En este ejemplo, el pago se recibe al mismo tiempo que se entrega la mercanc\xeda o servicio."),(0,r.kt)(o.Z,{groupId:"codeExamples",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"js",label:"Node.js",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const Facturapi = require('facturapi');\nconst facturapi = new Facturapi('sk_test_API_KEY');\n\nconst invoice = await facturapi.invoices.create({\n  customer: {\n    legal_name: 'Dunder Mifflin',\n    email: 'email@example.com',\n    tax_id: 'ABC101010111',\n    tax_system: '601',\n    address: {\n      zip: '85900'\n    }\n  },\n  items: [{\n    quantity: 2,\n    product: {\n      description: 'Ukelele',\n      product_key: '60131324', // ClaveProdServ del SAT\n      price: 345.60,\n      taxes: [\n        {\n          type: 'IVA',\n          rate: 0.16\n        }\n      ]\n    }\n  }],\n  use: 'G01',\n  payment_form: \"28\" // \"Tarjeta de d\xe9bito\"\n});\n"))),(0,r.kt)(i.Z,{value:"cs",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var facturapi = new FacturapiClient("sk_test_API_KEY");\n\nvar invoice = await facturapi.Invoice.CreateAsync(new Dictionary<string, object>\n{\n  ["customer"] = new Dictionary<string, object>\n  {\n    ["legal_name"] = "Dunder Mifflin",\n    ["email"] = "email@example.com",\n    ["tax_id"] = "ABC101010111",\n    ["tax_system"] = "601",\n    ["address"] = new Dictionary<string, object>\n    {\n      ["zip"] = "85900"\n    }\n  },\n  ["items"] = new Dictionary<string, object>[]\n  {\n    new Dictionary<string, object>\n    {\n      ["quantity"] = 2,\n      ["product"] = new Dictionary<string, object>\n      {\n        ["description"] = "Ukelele",\n        ["product_key"] = "60131324", // ClaveProdServ del SAT\n        ["price"] = 345.60,\n        ["taxes"] = new Dictionary<string, object>[]\n        {\n          new Dictionary<string, object>\n          {\n            ["type"] = "IVA",\n            ["rate"] = 0.16\n          }\n        }\n      }\n      ["product"] = new Dictionary<string, object>\n      {\n        ["description"] = "Ukelele",\n        ["product_key"] = "60131324", // ClaveProdServ del SAT\n        ["price"] = 345.60,\n        ["taxes"] = new Dictionary<string, object>[]\n        {\n          new Dictionary<string, object>\n          {\n            ["type"] = "IVA",\n            ["rate"] = 0.16\n          }\n        }\n      }\n    }\n  },\n  ["use"] = "G01",\n  ["payment_form"] = "28" // "Tarjeta de d\xe9bito"\n});\n'))),(0,r.kt)(i.Z,{value:"php",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$facturapi = new Facturapi( "sk_test_API_KEY" );\n\n$invoice = $facturapi->Invoices->create([\n  "customer" => [\n    "legal_name" => "Dunder Mifflin",\n    "email" => "email@example.com",\n    "tax_id" => "ABC101010111",\n    "tax_system" => "601",\n    "address" => [\n      "zip" => "85900"\n    ]\n  ],\n  "items" => [\n    [\n      "quantity" => 2,\n      "product" => [\n        "description" => "Ukelele",\n        "product_key" => "60131324", // ClaveProdServ del SAT\n        "price" => 345.60,\n        "taxes" => [\n          [\n            "type" => "IVA",\n            "rate" => 0.16,\n          ]\n        ]\n      ]\n    ],\n  ],\n  "payment_form" => "28" // "Tarjeta de d\xe9bito"\n]);\n'))),(0,r.kt)(i.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://www.facturapi.io/v2/invoices \\\n  -H "Authorization: Bearer sk_test_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "customer": {\n      "legal_name": "Dunder Mifflin",\n      "email": "email@example.com",\n      "tax_id": "ABC101010111",\n      "tax_system": "601",\n      "address": {\n        "zip": "85900"\n      }\n    },\n    "items": [{\n      "quantity": 2,\n      "product": {\n        "description": "Ukelele",\n        "product_key": "60131324", // ClaveProdServ del SAT\n        "price": 345.60,\n        "taxes": [\n          {\n            "type": "IVA",\n            "rate": 0.16\n          }\n        ]\n      }\n    }],\n    "use": "G01",\n    "payment_form": "28" // "Tarjeta de d\xe9bito"\n  }\'\n')))),(0,r.kt)("h3",{id:"factura-con-pago-a-cr\xe9dito"},"Factura con pago a cr\xe9dito"),(0,r.kt)("p",null,"En este ejemplo, la mercanc\xeda o servicio se entrega, pero no se recibe el pago todav\xeda."),(0,r.kt)("p",null,"Posteriormente, cuando recibas un pago, ya sea por el total de la cuenta o una parcialidad, deber\xe1s emitir\nun ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/invoices/pago"},"Comprobante de Pago"),"."),(0,r.kt)(o.Z,{groupId:"codeExamples",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"js",label:"Node.js",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const Facturapi = require('facturapi');\nconst facturapi = new Facturapi('sk_test_API_KEY');\n\nconst invoice = await facturapi.invoices.create({\n  customer: {\n    legal_name: 'Dunder Mifflin',\n    email: 'email@example.com',\n    tax_id: 'ABC101010111',\n    tax_system: '601',\n    address: {\n      zip: '85900'\n    }\n  },\n  items: [{\n    quantity: 2,\n    product: {\n      description: 'Ukelele',\n      product_key: '60131324', // ClaveProdServ del SAT\n      price: 345.60,\n      taxes: [\n        {\n          type: 'IVA',\n          rate: 0.16\n        }\n      ]\n    }\n  }],\n  use: 'G01',\n  payment_form: \"99\", // \"Por definir\"\n  payment_method: 'PPD', // \"Pago en Parcialidades o Diferido\"\n  conditions: 'Fecha l\xedmite de pago: 2022-01-01' // Texto libre definiendo las condiciones del pago (opcional)\n});\n"))),(0,r.kt)(i.Z,{value:"cs",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var facturapi = new FacturapiClient("sk_test_API_KEY");\n\nvar invoice = await facturapi.Invoice.CreateAsync(new Dictionary<string, object>\n{\n  ["customer"] = new Dictionary<string, object>\n  {\n    ["legal_name"] = "Dunder Mifflin",\n    ["email"] = "email@example.com",\n    ["tax_id"] = "ABC101010111",\n    ["tax_system"] = "601",\n    ["address"] = new Dictionary<string, object>\n    {\n      ["zip"] = "85900"\n    }\n  },\n  ["items"] = new Dictionary<string, object>[]\n  {\n    new Dictionary<string, object>\n    {\n      ["quantity"] = 2,\n      ["product"] = new Dictionary<string, object>\n      {\n        ["description"] = "Ukelele",\n        ["product_key"] = "60131324", // ClaveProdServ del SAT\n        ["price"] = 345.60,\n        ["taxes"] = new Dictionary<string, object>[]\n        {\n          new Dictionary<string, object>\n          {\n            ["type"] = "IVA",\n            ["rate"] = 0.16\n          }\n        }\n      }\n    }\n  },\n  ["use"] = "G01",\n  ["payment_form"] = "99", // "Por definir"\n  ["payment_method"] = "PPD", // "Pago en Parcialidades o Diferido"\n  ["conditions"] = "Fecha l\xedmite de pago: 2022-01-01" // Texto libre definiendo las condiciones del pago (opcional)\n});\n'))),(0,r.kt)(i.Z,{value:"php",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$facturapi = new Facturapi( "sk_test_API_KEY" );\n\n$invoice = $facturapi->Invoices->create([\n  "customer" => [\n    "legal_name" => "Dunder Mifflin",\n    "email" => "email@example.com",\n    "tax_id" => "ABC101010111",\n    "tax_system" => "601",\n    "address" => [\n      "zip" => "85900"\n    ]\n  ],\n  "items" => [\n    [\n      "quantity" => 2,\n      "product" => [\n        "description" => "Ukelele",\n        "product_key" => "60131324",\n        "price" => 345.60,\n        "taxes" => [\n          [\n            "type" => "IVA",\n            "rate" => 0.16,\n          ]\n        ]\n      ]\n    ],\n  ],\n  "payment_form" => "99", // "Por definir"\n  "payment_method" => "PPD", // "Pago en Parcialidades o Diferido"\n  "conditions" => "Fecha l\xedmite de pago: 2022-01-01" // Texto libre definiendo las condiciones del pago (opcional)\n]);\n'))),(0,r.kt)(i.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://www.facturapi.io/v2/invoices \\\n  -H "Authorization: Bearer sk_test_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "customer": {\n      "legal_name": "Dunder Mifflin",\n      "email": "email@example.com",\n      "tax_id": "ABC101010111",\n      "tax_system": "601",\n      "address": {\n        "zip": "85900"\n      }\n    },\n    "items": [{\n      "quantity": 2,\n      "product": {\n        "description": "Ukelele",\n        "product_key": "60131324",\n        "price": 345.60,\n        "taxes": [\n          {\n            "type": "IVA",\n            "rate": 0.16\n          }\n        ]\n      }\n    }],\n    "use": "G01",\n    "payment_form": "99", // "Por definir"\n    "payment_method": "PPD", // "Pago en Parcialidades o Diferido"\n    "conditions": "Fecha l\xedmite de pago: 2022-01-01" // Texto libre definiendo las condiciones del pago (opcional)\n  }\'\n')))))}m.isMDXComponent=!0}}]);